<UserControl x:Class="TicketeX_.Views.ClosedTicketQueueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:TicketeX_.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
 <DockPanel Background="#22202f">
        <Grid DockPanel.Dock="Top" Margin="20,10,20,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock  Width="100" HorizontalAlignment="Left" Background="Transparent" Foreground="Azure" Text="{Binding DataContext.CurrentAccount, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Name="FilterMenuButton" Width="20" Margin="15, 0" BorderThickness="0" HorizontalAlignment="Right" Background="Transparent" Click="OpenContextMenuOnLeftClick">
                <materialDesign:PackIcon Kind="Tune" Background="Transparent" Foreground="Azure"/>
                <Button.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Style>
                            <Style TargetType="ContextMenu">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ContextMenu">
                                            <Border CornerRadius="4" Padding="3" BorderThickness="1" BorderBrush="#22202f" Background="Azure" SnapsToDevicePixels="True">
                                                <ItemsPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="Black"/>
                            </Style>
                        </ContextMenu.Style>
                        <MenuItem Header="Filter by"/>
                        <Separator />
                        <MenuItem Name="FilterCheckSevLo" Header="Severity Lo" IsCheckable="True" Checked="SevLo" Unchecked="SevLo" IsChecked="True"/>
                        <MenuItem Name="FilterCheckSevMed" Header="Severity Medium" IsCheckable="True" Checked="SevMed" Unchecked="SevMed" IsChecked="True"/>
                        <MenuItem Name="FilterCheckSevHi" Header="Severity High" IsCheckable="True" Checked="SevHi" Unchecked="SevHi" IsChecked="True"/>
                        <MenuItem Name="FilterCheckSevCrit" Header="Severity Critical" IsCheckable="True" Checked="SevCrit" Unchecked="SevCrit" IsChecked="True"/>
                        <Separator/>
                        <MenuItem Name="RefreshFilters" Header="Clear all filters" IsCheckable="False" Click="RefreshFiltersButton_OnClick"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Width="20" Margin="15, 0" BorderThickness="0" HorizontalAlignment="Right" Background="Transparent" Click="OpenContextMenuOnLeftClick">
                <materialDesign:PackIcon Kind="SwapVertical" Background="Transparent" Foreground="Azure"/>
                <Button.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Style>
                            <Style TargetType="ContextMenu">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ContextMenu">
                                            <Border CornerRadius="4" Padding="3" BorderThickness="1" BorderBrush="#22202f" Background="Azure" SnapsToDevicePixels="True">
                                                <ItemsPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="Black"/>
                            </Style>
                        </ContextMenu.Style>
                        <MenuItem Header="Sort by"/>
                        <Separator />
                        <MenuItem Header="Severity Lo-Hi" Click="SortSevLoFirst_OnClick"/>
                        <MenuItem Header="Severity Hi-Lo" Click="SortSevHiFirst_OnClick"/>
                        <MenuItem Header="Oldest closed" Click="SortLastUpdatedAsc_OnClick"/>
                        <MenuItem Header="Recently closed" Click="SortLastUpdatedDesc_OnClick"/>

                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Width="20" Margin="15, 0,0 0" BorderThickness="0" HorizontalAlignment="Right" Background="Transparent" Click="RefreshFiltersButton_OnClick" Command="{Binding DataContext.RefreshClosedTicketsCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                <materialDesign:PackIcon Kind="Refresh" Background="Transparent" Foreground="Azure"/>
            </Button>
            </StackPanel>
        </Grid>

        <DataGrid DockPanel.Dock="Top"
                  x:Name="QueueGrid"
                  Background="Transparent"
                  Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                  BorderThickness="0"
                  RowStyle="{StaticResource DataGridRowTheme}"
                  ColumnHeaderStyle="{StaticResource DataGridHeaderTheme}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False" 
                  CanUserDeleteRows="False"
                  HeadersVisibility="Column"
                  GridLinesVisibility="None" 
                  Margin="0"
                  IsReadOnly="True"
                  Focusable="True"
                  IsManipulationEnabled="False"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  SelectedItem="{Binding SelectedTicket, Mode=TwoWay}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Style>
                        <Style TargetType="ContextMenu">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ContextMenu">
                                        <Border CornerRadius="4" Padding="3" BorderThickness="1" BorderBrush="#22202f" Background="Azure" SnapsToDevicePixels="True">
                                            <ItemsPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </ContextMenu.Style>
                    <MenuItem Header="Show ticket" Command="{Binding ShowTicketCommand}" CommandParameter="{Binding SelectedTicket}"/>
                    <MenuItem Header="Copy ticket" Command="{Binding CopyTicketDataCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Ticket ID" Binding="{Binding TicketId}" Width="auto"/>
                <DataGridTextColumn Header="Severity" Binding="{Binding Severity}" Width="auto" />
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="auto" />
                <DataGridTextColumn Header="Last updated" Binding="{Binding DateTimeLastUpdated}" Width="auto"/>
                <DataGridTextColumn Header="Origin" Binding="{Binding Origin}" Width="auto" />
                <DataGridTextColumn Header="SeverityAsNumber" Binding="{Binding SeverityNumber}" Width="0" Visibility="Hidden"/>
                <DataGridTemplateColumn Header="Description" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}" 
                                       TextTrimming="CharacterEllipsis"
                                       MaxHeight="20"
                                       ToolTip="{Binding Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    
                    <Setter Property="Margin" Value="15 0" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#20CAFD"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Resources>
                <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border x:Name="Border" 
                                        Background="LightGray" 
                                        CornerRadius="8" 
                                        Height="{TemplateBinding Height}" 
                                        Width="{TemplateBinding Width}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="Border" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter Property="Background" TargetName="Border" Value="Gray"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Margin" Value="5,1,0,1"></Setter>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Track Name="PART_Track" IsDirectionReversed="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageUpCommand" Opacity="0"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand" Opacity="0"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
    </DockPanel>
</UserControl>
